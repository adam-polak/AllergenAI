@page "/"
@rendermode InteractiveServer
@inject IConfiguration Config

<style>
    .green-border > .mud-input-control-input-container > .mud-input.mud-input-outlined > input:focus ~ .mud-input-outlined-border{border-color: rgb(91, 146, 91);}
    .green-border-text > .mud-input-control-input-container > .mud-input:focus-within~label.mud-input-label.mud-input-label-inputcontrol{color: rgb(36, 138, 36);}
</style>

<MudGrid Justify="Justify.Center" Spacing="0" class="text-center">
    @if(!_allergenDrawer)
    {
        <MudItem xs="6">
            <MudButton Variant="Variant.Filled" @onclick="AllergenDrawerToggle">View Allergens</MudButton>
        </MudItem>
    } else {
        <MudItem>
            <MudButton Variant="Variant.Filled" @onclick="AllergenDrawerToggle" Style="@($"background-color:{Colors.Pink.Lighten5};")">Close Allergen List</MudButton>
            <br>
            <br>
            <table class="table">
                <th><h4>Allergens</h4></th>
                <th></th>
                <tr>
                    <td>
                        <form method="post" @onsubmit="AddAllergen">
                            <MudTextField ShrinkLabel class="green-border green-border-text" @bind-Value="Add" Label="Add allergen" Variant="Variant.Outlined"></MudTextField>
                        </form>
                    </td>
                    <td></td>
                </tr>
                @for(int i = 0; i < Allergens.Count; i++)
                {
                    Allergen allergen = Allergens.ElementAt(i);
                    allergen.Id = i;
                    <tr>
                        <td style="font-size:1.5em;">@allergen.Label</td>
                        <td>
                            <MudIconButton style="margin-left: -100px;" Icon="@Icons.Material.Filled.Close" @onclick="() => DeleteAllergen(allergen)"></MudIconButton>
                        </td>
                    </tr>
                }
            </table>
        </MudItem>
    }

    <MudItem xs="12" class="text-center" style="margin: auto; padding: 3% 20%;">
        <form method="post" @onsubmit="SearchForFood">
            <MudTextField @bind-Value="Food" class="green-border green-border-text small-label-text" HelperText="Check if a food contains your allergens" Label="Enter food" Variant="Variant.Outlined"></MudTextField>
        </form>
    </MudItem>

    <MudItem xs="12" class="text-center">
        @if(_displayMessage)
        {
            @if(!PotentialAllergy) 
            {
                <MudIcon Icon="@Icons.Material.Filled.ThumbUpAlt"></MudIcon>
                <br>
                <h5>You can eat @Food</h5>
            } else {
                <MudIcon Icon="@Icons.Material.Filled.ThumbDownAlt"></MudIcon>
                <h5>@Food may contain some things you are allergic too</h5>
            }
        }
    </MudItem>
</MudGrid>

@code {
    private static string LightGreen = Colors.LightGreen.Lighten3;

    public int Count = 0;
    public List<Allergen> Allergens = [];
    public string Food = "";
    public string Add = "";

    bool _allergenDrawer = true;
    bool PotentialAllergy = false;
    bool _displayMessage = false;

    GeminiConnection connection;

    protected override async Task OnInitializedAsync() {
        connection = new GeminiConnection(Config);
        return;
    }

    public void SearchForFood()
    {
        _displayMessage = false;
        if(Allergens.Count > 0 && !Food.Equals("")) 
        {
            PotentialAllergy = connection.CheckForAllergens(Food, Allergens);
            _displayMessage = true;
        }
    }

    private void AllergenDrawerToggle()
    {
        _allergenDrawer = !_allergenDrawer;
    }

    private void DeleteAllergen(Allergen allergen)
    {
        Allergens.RemoveAt(allergen.Id);
    }

    private void AddAllergen()
    {
        if(!(Add.Equals("") || ContainsLabel())) Allergens.Add(new Allergen() { Label = Add, Id = Allergens.Count - 1 });
        _displayMessage = false;
        Add = "";
    }

    private bool ContainsLabel()
    {
        foreach(Allergen allergen in Allergens)
        {
            if(allergen.Label.Equals(allergen)) return true;
        }
        return false;
    }
}
